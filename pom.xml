<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jenkins-ci</groupId>
    <artifactId>jenkins</artifactId>
    <version>1.122</version>
    <relativePath />
  </parent>

  <groupId>org.jenkins-ci.tests</groupId>
  <artifactId>plugins-compat-tester-cli</artifactId>
  <version>${changelist}</version>
  <name>Plugins compatibility tester CLI</name>
  <description>Jenkins Plugin Compatibility Tester (PCT) against latest released version</description>
  <url>https://github.com/jenkinsci/plugin-compat-tester</url>

  <scm>
    <connection>scm:git:ssh://git@github.com/${gitHubRepo}.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/${gitHubRepo}.git</developerConnection>
    <tag>${scmTag}</tag>
    <url>https://github.com/${gitHubRepo}</url>
  </scm>

  <properties>
    <changelist>999999-SNAPSHOT</changelist>
    <gitHubRepo>jenkinsci/plugin-compat-tester</gitHubRepo>
    <jenkins.version>2.477</jenkins.version>
    <picocli.version>4.7.6</picocli.version>
    <spotbugs.effort>Max</spotbugs.effort>
    <spotless.check.skip>false</spotless.check.skip>
    <argLine />
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-bom</artifactId>
        <version>2.0.16</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <optional>true</optional>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.16.1</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${picocli.version}</version>
    </dependency>
    <dependency>
      <groupId>io.jenkins.lib</groupId>
      <artifactId>support-log-formatter</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <version>3.9.9</version>
    </dependency>
    <dependency>
      <groupId>org.dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>2.1.4</version>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci</groupId>
      <artifactId>version-number</artifactId>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.kohsuke.metainf-services</groupId>
      <artifactId>metainf-services</artifactId>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci</groupId>
      <artifactId>test-annotations</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main</groupId>
      <artifactId>jenkins-core</artifactId>
      <version>${jenkins.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>text-finder</artifactId>
      <version>1.29</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.jenkins-ci.tools</groupId>
        <artifactId>maven-hpi-plugin</artifactId>
        <!-- Version specified in parent POM -->
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>prepare-test-plugins</id>
            <goals>
              <goal>resolve-test-dependencies</goal>
            </goals>
            <phase>test-compile</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <!-- Version specified in parent POM -->
        <executions>
          <execution>
            <id>jenkins-war</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <phase>process-test-classes</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.jenkins-ci.main</groupId>
                  <artifactId>jenkins-war</artifactId>
                  <version>${jenkins.version}</version>
                  <type>executable-war</type>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>prepare-megawar</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>process-test-classes</phase>
            <configuration>
              <target>
                <!-- Keep in sync with logic in jenkinsci/bom/prep.sh -->
                <mkdir dir="${project.build.directory}/jenkins" />
                <echo file="${project.build.directory}/jenkins/split-plugins.txt"># nothing</echo>
                <delete dir="${project.build.directory}/megawar" />
                <unzip dest="${project.build.directory}/megawar" src="${project.build.directory}/jenkins-war-${jenkins.version}.war" />
                <jar basedir="${project.build.directory}" destfile="${project.build.directory}/megawar/WEB-INF/lib/jenkins-core-${jenkins.version}.jar" includes="jenkins/split-plugins.txt" update="true" />
                <copy todir="${project.build.directory}/megawar/WEB-INF/plugins">
                  <fileset dir="${project.build.directory}/test-classes/test-dependencies">
                    <include name="**/*.hpi" />
                  </fileset>
                </copy>
                <delete dir="${project.build.directory}/megawar/WEB-INF/detached-plugins" />
                <delete file="${project.build.directory}/megawar/META-INF/JENKINS.RSA" />
                <delete file="${project.build.directory}/megawar/META-INF/JENKINS.SF" />
                <war destfile="${project.build.directory}/megawar.war" manifest="${project.build.directory}/megawar/META-INF/MANIFEST.MF">
                  <fileset dir="${project.build.directory}/megawar" />
                </war>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.jenkins.tools.test.CLI</mainClass>
                  <manifestEntries>
                    <Implementation-Build-Is-Tainted>${buildIsTainted}</Implementation-Build-Is-Tainted>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ComponentsXmlResourceTransformer" />
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              </transformers>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/MANIFEST.MF</exclude>
                  </excludes>
                </filter>
                <filter>
                  <artifact>org.slf4j</artifact>
                  <excludes>
                    <exclude>META-INF/versions/9/module-info.class</exclude>
                    <exclude>META-INF/versions/9/module-info.java</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <!-- Version specified in parent POM -->
        <configuration>
          <argLine>@{argLine} -Xmx128m -XX:+HeapDumpOnOutOfMemoryError -XX:+TieredCompilation -XX:TieredStopAtLevel=1</argLine>
          <systemPropertyVariables>
            <java.util.logging.config.class>org.jenkins.tools.test.logging.LoggingConfiguration</java.util.logging.config.class>
          </systemPropertyVariables>
          <environmentVariables>
            <!--
              PluginCompatTesterTest runs the PCT which will run various maven.  if the JVM is not configured (its not for the text-finder)
               then we run a JVM that seems the host/container memory and assumes it is the only thing running leading to it being OOMKilled
               -->
            <MAVEN_OPTS>-Xmx256m -XX:+TieredCompilation -XX:TieredStopAtLevel=1</MAVEN_OPTS>
          </environmentVariables>
          <reuseForks>false</reuseForks>
          <runOrder>alphabetical</runOrder>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>enable-jacoco</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.12</version>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
